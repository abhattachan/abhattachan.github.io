{"version":3,"sources":["../src/components/LoginCommand/index.ts","../src/components/LoginCommand/LoginCommand.tsx","../src/components/LoginCommand/AlreadyLoggedIn.tsx"],"sourcesContent":["export { LoginCommand } from './LoginCommand.js';\n","import React, { useState, useCallback } from 'react';\nimport type { FC } from 'react';\nimport { Login, ApiKeyLogin } from '@wix/cli-auth';\nimport type { UserInfo } from '@wix/cli-auth';\nimport { Text, useExit } from '@wix/cli-ui-kit';\nimport { Trans } from '@wix/cli-i18n';\nimport { useErrorReporter } from '@wix/cli-error-reporting';\nimport { useBiLogger } from '@wix/cli-telemetry-react';\nimport type { VariantOf } from 'variant';\nimport { fields, match, variant } from 'variant';\nimport { addUserFields } from '../../bi.js';\nimport { AlreadyLoggedIn } from './AlreadyLoggedIn.js';\n\ninterface Props {\n  apiKeyToken?: string;\n  userInfo: UserInfo | null;\n}\n\nconst LoginState = variant({\n  PendingUserConfirmation: {},\n  InProgress: {},\n  Success: fields<{ userInfo: UserInfo }>(),\n});\ntype LoginState = VariantOf<typeof LoginState>;\n\nexport const LoginCommand: FC<Props> = ({\n  apiKeyToken,\n  userInfo: initialUserInfo,\n}) => {\n  const exit = useExit();\n  const errorReporter = useErrorReporter();\n  const biLogger = useBiLogger();\n  const [loginState, setLoginState] = useState<LoginState>(\n    initialUserInfo === null\n      ? LoginState.InProgress()\n      : LoginState.PendingUserConfirmation()\n  );\n\n  const handleLogin = useCallback(\n    ({ userInfo }: { userInfo: UserInfo }) => {\n      errorReporter.setUser({ id: userInfo.userId });\n      addUserFields(biLogger, userInfo.userId);\n      setLoginState(LoginState.Success({ userInfo }));\n    },\n    [setLoginState, errorReporter, biLogger]\n  );\n\n  return (\n    <>\n      {initialUserInfo && (\n        <AlreadyLoggedIn\n          userInfo={initialUserInfo}\n          onSubmit={(relogin) =>\n            relogin && setLoginState(LoginState.InProgress())\n          }\n        />\n      )}\n      {match(loginState, {\n        PendingUserConfirmation: () => null,\n        InProgress: () =>\n          apiKeyToken ? (\n            <ApiKeyLogin\n              token={apiKeyToken}\n              onLogin={handleLogin}\n              onError={exit}\n            />\n          ) : (\n            <Login onLogin={handleLogin} onError={exit} />\n          ),\n        Success: ({ userInfo }) => (\n          <Trans\n            i18nKey=\"login_command.success\"\n            components={[<Text skin=\"legacyBlue\" />]}\n            values={{ email: userInfo.email }}\n          />\n        ),\n      })}\n    </>\n  );\n};\n","import React from 'react';\nimport type { FC } from 'react';\nimport type { UserInfo } from '@wix/cli-auth';\nimport { Text, ConfirmInput } from '@wix/cli-ui-kit';\nimport { Trans, useTranslation } from '@wix/cli-i18n';\n\ninterface Props {\n  userInfo: UserInfo;\n  onSubmit: (relogin: boolean) => void;\n}\n\nexport const AlreadyLoggedIn: FC<Props> = ({ userInfo, onSubmit }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Trans\n        i18nKey=\"login_command.already_logged_in.warning\"\n        components={[<Text skin=\"legacyBlue\" />]}\n        values={{ email: userInfo.email }}\n      />\n      <ConfirmInput\n        label={t('login_command.already_logged_in.confirm')}\n        initialValue={true}\n        onSubmit={onSubmit}\n      />\n    </>\n  );\n};\n"],"mappings":";;wnBAAAA,ICAAC,IAAA,IAAAC,EAA6C,SAS7C,IAAAC,EAAuC,SCTvCC,IAAA,IAAAC,EAAkB,SAWX,IAAMC,EAA6B,CAAC,CAAE,SAAAC,EAAU,SAAAC,CAAS,IAAM,CACpE,GAAM,CAAE,EAAAC,CAAE,EAAIC,EAAe,EAE7B,OACE,EAAAC,QAAA,gBAAAA,QAAA,cACE,EAAAA,QAAA,cAACC,EAAA,CACC,QAAQ,0CACR,WAAY,CAAC,EAAAD,QAAA,cAACE,EAAA,CAAK,KAAK,aAAa,CAAE,EACvC,OAAQ,CAAE,MAAON,EAAS,KAAM,EAClC,EACA,EAAAI,QAAA,cAACG,EAAA,CACC,MAAOL,EAAE,yCAAyC,EAClD,aAAc,GACd,SAAUD,EACZ,CACF,CAEJ,EDVA,IAAMO,KAAa,WAAQ,CACzB,wBAAyB,CAAC,EAC1B,WAAY,CAAC,EACb,WAAS,UAA+B,CAC1C,CAAC,EAGYC,EAA0B,CAAC,CACtC,YAAAC,EACA,SAAUC,CACZ,IAAM,CACJ,IAAMC,EAAOC,EAAQ,EACfC,EAAgBC,EAAiB,EACjCC,EAAWC,EAAY,EACvB,CAACC,EAAYC,CAAa,KAAI,YAClCR,IAAoB,KAChBH,EAAW,WAAW,EACtBA,EAAW,wBAAwB,CACzC,EAEMY,KAAc,eAClB,CAAC,CAAE,SAAAC,CAAS,IAA8B,CACxCP,EAAc,QAAQ,CAAE,GAAIO,EAAS,MAAO,CAAC,EAC7CC,EAAcN,EAAUK,EAAS,MAAM,EACvCF,EAAcX,EAAW,QAAQ,CAAE,SAAAa,CAAS,CAAC,CAAC,CAChD,EACA,CAACF,EAAeL,EAAeE,CAAQ,CACzC,EAEA,OACE,EAAAO,QAAA,gBAAAA,QAAA,cACGZ,GACC,EAAAY,QAAA,cAACC,EAAA,CACC,SAAUb,EACV,SAAWc,GACTA,GAAWN,EAAcX,EAAW,WAAW,CAAC,EAEpD,KAED,SAAMU,EAAY,CACjB,wBAAyB,IAAM,KAC/B,WAAY,IACVR,EACE,EAAAa,QAAA,cAACG,EAAA,CACC,MAAOhB,EACP,QAASU,EACT,QAASR,EACX,EAEA,EAAAW,QAAA,cAACI,EAAA,CAAM,QAASP,EAAa,QAASR,EAAM,EAEhD,QAAS,CAAC,CAAE,SAAAS,CAAS,IACnB,EAAAE,QAAA,cAACK,EAAA,CACC,QAAQ,wBACR,WAAY,CAAC,EAAAL,QAAA,cAACM,EAAA,CAAK,KAAK,aAAa,CAAE,EACvC,OAAQ,CAAE,MAAOR,EAAS,KAAM,EAClC,CAEJ,CAAC,CACH,CAEJ","names":["init_esm_shims","init_esm_shims","import_react","import_variant","init_esm_shims","import_react","AlreadyLoggedIn","userInfo","onSubmit","t","useTranslation","React","Trans","Text","ConfirmInput","LoginState","LoginCommand","apiKeyToken","initialUserInfo","exit","useExit","errorReporter","useErrorReporter","biLogger","useBiLogger","loginState","setLoginState","handleLogin","userInfo","addUserFields","React","AlreadyLoggedIn","relogin","ApiKeyLogin","LoginWithI18n","Trans","Text"]}