{"version":3,"sources":["../../cli-site/src/preview/index.ts","../../cli-site/src/preview/preview.ts"],"sourcesContent":["export { preview } from './preview.js';\n","import { cwd, exit } from 'node:process';\nimport { DeploymentOperation } from '@wix/ambassador-velo-apps-v1-app/types';\nimport prompts from 'prompts';\nimport { writeCrashReport } from '@wix/cli-debug-log';\nimport { getDebugLogFilePath } from '@wix/cli-core-definitions';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport { getDefaultBranch } from '../git/index.js';\nimport { deployGridApp, DeploymentSource } from '../gridapp/deployApp.js';\nimport { createI18nT } from '../i18n.js';\nimport { createLogger } from '../logger.js';\nimport { loadProjectModel } from '../model.js';\nimport { isSiteNotPublishedError } from '../utils.js';\nimport { authenticate } from '../authentication.js';\n\nexport async function preview(\n  { biLogger, errorReporter }: CommandServices,\n  options: {\n    source?: 'local' | 'remote';\n  }\n) {\n  const model = await loadProjectModel(cwd());\n  const authState = await authenticate({\n    metaSiteId: model.metaSiteId,\n    biLogger,\n    errorReporter,\n  });\n\n  const t = createI18nT();\n  const logger = createLogger({ t });\n\n  const defaultBranchName = await getDefaultBranch((e) =>\n    writeCrashReport(getDebugLogFilePath(model.projectFolder), e)\n  );\n\n  const whatToPreview = options.source\n    ? { value: options.source }\n    : await prompts(\n        {\n          type: 'select',\n          name: 'value',\n          message: logger.t('preview_command.prompt_what_to_preview'),\n          choices: [\n            {\n              title: defaultBranchName\n                ? logger.t(\n                    'preview_command.prompt_what_to_preview_choice_latest',\n                    {\n                      branchName: defaultBranchName,\n                    }\n                  )\n                : logger.t(\n                    'preview_command.prompt_what_to_preview_choice_latest_fallback'\n                  ),\n              value: 'remote',\n            },\n            {\n              title: logger.t(\n                'preview_command.prompt_what_to_preview_choice_local'\n              ),\n              value: 'local',\n            },\n          ],\n        },\n        {\n          onCancel: () => {\n            logger.logAborting();\n            exit(130 /* SIGINT */);\n          },\n        }\n      );\n\n  const deploymentSource =\n    whatToPreview.value === 'local'\n      ? DeploymentSource.local()\n      : DeploymentSource.remote({});\n\n  logger.logCreatingPreview();\n\n  try {\n    const preview = await deployGridApp({\n      model,\n      operation: DeploymentOperation.RC,\n      source: deploymentSource,\n      authState,\n    });\n\n    logger.logPreviewCreated(\n      preview.deploymentShortUrl ?? preview.deploymentUrl\n    );\n  } catch (err) {\n    if (isSiteNotPublishedError(err)) {\n      logger.logPreviewUnsupported();\n    } else {\n      throw err;\n    }\n  }\n}\n"],"mappings":";;m4BAAAA,ICAAC,IAAA,OAAS,OAAAC,EAAK,QAAAC,MAAY,eAE1B,IAAAC,EAAoB,SAYpB,eAAsBC,EACpB,CAAE,SAAAC,EAAU,cAAAC,CAAc,EAC1BC,EAGA,CACA,IAAMC,EAAQ,MAAMC,EAAiBC,EAAI,CAAC,EACpCC,EAAY,MAAMC,EAAa,CACnC,WAAYJ,EAAM,WAClB,SAAAH,EACA,cAAAC,CACF,CAAC,EAEKO,EAAIC,EAAY,EAChBC,EAASC,EAAa,CAAE,EAAAH,CAAE,CAAC,EAE3BI,EAAoB,MAAMC,EAAkBC,GAChDC,EAAiBC,EAAoBb,EAAM,aAAa,EAAGW,CAAC,CAC9D,EAuCMG,GArCgBf,EAAQ,OAC1B,CAAE,MAAOA,EAAQ,MAAO,EACxB,QAAM,EAAAgB,SACJ,CACE,KAAM,SACN,KAAM,QACN,QAASR,EAAO,EAAE,wCAAwC,EAC1D,QAAS,CACP,CACE,MAAOE,EACHF,EAAO,EACL,uDACA,CACE,WAAYE,CACd,CACF,EACAF,EAAO,EACL,+DACF,EACJ,MAAO,QACT,EACA,CACE,MAAOA,EAAO,EACZ,qDACF,EACA,MAAO,OACT,CACF,CACF,EACA,CACE,SAAU,IAAM,CACdA,EAAO,YAAY,EACnBS,EAAK,GAAgB,CACvB,CACF,CACF,GAGY,QAAU,QACpBC,EAAiB,MAAM,EACvBA,EAAiB,OAAO,CAAC,CAAC,EAEhCV,EAAO,mBAAmB,EAE1B,GAAI,CACF,IAAMX,EAAU,MAAMsB,EAAc,CAClC,MAAAlB,EACA,UAAWmB,EAAoB,GAC/B,OAAQL,EACR,UAAAX,CACF,CAAC,EAEDI,EAAO,kBACLX,EAAQ,oBAAsBA,EAAQ,aACxC,CACF,OAASwB,EAAK,CACZ,GAAIC,EAAwBD,CAAG,EAC7Bb,EAAO,sBAAsB,MAE7B,OAAMa,CAEV,CACF","names":["init_esm_shims","init_esm_shims","cwd","exit","import_prompts","preview","biLogger","errorReporter","options","model","loadProjectModel","cwd","authState","authenticate","t","createI18nT","logger","createLogger","defaultBranchName","getDefaultBranch","e","writeCrashReport","getDebugLogFilePath","deploymentSource","prompts","exit","DeploymentSource","deployGridApp","DeploymentOperation","err","isSiteNotPublishedError"]}