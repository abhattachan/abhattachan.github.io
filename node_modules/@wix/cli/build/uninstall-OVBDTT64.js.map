{"version":3,"sources":["../../cli-site/src/uninstall/index.ts","../../cli-site/src/uninstall/uninstall.ts"],"sourcesContent":["export { uninstall } from './uninstall.js';\n","import { CliError, CliErrorCode } from '@wix/cli-error';\nimport { cwd } from 'node:process';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport {\n  uninstallNpmPackage,\n  getDefaultPackageManager,\n  resolveNpmDependencies,\n} from '../dependency-manager/index.js';\nimport type { PackageManager } from '../dependency-manager/index.js';\nimport { createLogger } from '../logger.js';\nimport { createI18nT } from '../i18n.js';\nimport { loadProjectModel } from '../model.js';\nimport { authenticate } from '../authentication.js';\n\nexport async function uninstall(\n  services: CommandServices,\n  options: {\n    yarn?: boolean;\n    npm?: boolean;\n  },\n  initialPackageName: string\n) {\n  const model = await loadProjectModel(cwd());\n  const t = createI18nT();\n  const logger = createLogger({ t });\n\n  const authState = await authenticate({\n    metaSiteId: model.metaSiteId,\n    biLogger: services.biLogger,\n    errorReporter: services.errorReporter,\n  });\n\n  const packageName = initialPackageName.trim();\n\n  if (!packageName) {\n    throw new CliError({\n      code: CliErrorCode.WixUninstallMissingPackageName(),\n    });\n  }\n\n  let packageManager: PackageManager;\n  if (options.yarn) {\n    packageManager = 'yarn';\n  } else if (options.npm) {\n    packageManager = 'npm';\n  } else {\n    packageManager = await getDefaultPackageManager(model.projectFolder);\n  }\n\n  const logDependencyUninstalled =\n    logger.logDependencyUninstalling(packageName);\n\n  try {\n    await uninstallNpmPackage(packageName, model.projectFolder, packageManager);\n    await resolveNpmDependencies(model.projectFolder, { authState });\n  } catch (e) {\n    throw new CliError({\n      code: CliErrorCode.FailedToUninstallPackage({ packageName, cause: e }),\n      cause: e,\n      info: { model },\n    });\n  }\n\n  logDependencyUninstalled();\n}\n"],"mappings":";;i0BAAAA,ICAAC,IACA,OAAS,OAAAC,MAAW,eAapB,eAAsBC,EACpBC,EACAC,EAIAC,EACA,CACA,IAAMC,EAAQ,MAAMC,EAAiBC,EAAI,CAAC,EACpCC,EAAIC,EAAY,EAChBC,EAASC,EAAa,CAAE,EAAAH,CAAE,CAAC,EAE3BI,EAAY,MAAMC,EAAa,CACnC,WAAYR,EAAM,WAClB,SAAUH,EAAS,SACnB,cAAeA,EAAS,aAC1B,CAAC,EAEKY,EAAcV,EAAmB,KAAK,EAE5C,GAAI,CAACU,EACH,MAAM,IAAIC,EAAS,CACjB,KAAMC,EAAa,+BAA+B,CACpD,CAAC,EAGH,IAAIC,EACAd,EAAQ,KACVc,EAAiB,OACRd,EAAQ,IACjBc,EAAiB,MAEjBA,EAAiB,MAAMC,EAAyBb,EAAM,aAAa,EAGrE,IAAMc,EACJT,EAAO,0BAA0BI,CAAW,EAE9C,GAAI,CACF,MAAMM,EAAoBN,EAAaT,EAAM,cAAeY,CAAc,EAC1E,MAAMI,EAAuBhB,EAAM,cAAe,CAAE,UAAAO,CAAU,CAAC,CACjE,OAASU,EAAG,CACV,MAAM,IAAIP,EAAS,CACjB,KAAMC,EAAa,yBAAyB,CAAE,YAAAF,EAAa,MAAOQ,CAAE,CAAC,EACrE,MAAOA,EACP,KAAM,CAAE,MAAAjB,CAAM,CAChB,CAAC,CACH,CAEAc,EAAyB,CAC3B","names":["init_esm_shims","init_esm_shims","cwd","uninstall","services","options","initialPackageName","model","loadProjectModel","cwd","t","createI18nT","logger","createLogger","authState","authenticate","packageName","CliError","CliErrorCode","packageManager","getDefaultPackageManager","logDependencyUninstalled","uninstallNpmPackage","resolveNpmDependencies","e"]}