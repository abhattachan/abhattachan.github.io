import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import{a as k}from"./chunk-6TDWVLRD.js";import{a as P,b as v,c as W}from"./chunk-QKI65SFV.js";import{k as $}from"./chunk-SPXP6KD4.js";import{c as t}from"./chunk-ZBJRW65P.js";import{e as w}from"./chunk-NUQ6G6J3.js";import{b as R}from"./chunk-NWTFQJ5S.js";import{c as T,e as L}from"./chunk-CU4HXYD6.js";import{i as y}from"./chunk-UO4ZAUJK.js";y();async function re({type:e,authState:o},p,_){let{minRetryTimeout:b}=R(),m={type:e,getAppToken:o?.getAccessToken,createHeaders:o?.getRequestHeaders};try{return await(_?W(()=>v(m).request(p),{..._,minTimeout:b}):v(m).request(p))}catch(l){throw P(l)&&l.response?.status===403?new T({code:L.PermissionDenied(),cause:l}):l}}y();function me({t:e}){let o=k(),p=()=>o.log(t.dim(e("general.aborting"))),_=()=>{let n=o.logWithLoader({text:e("dev_command.syncing_local_code_start"),discardStdin:!1});return{success:()=>{let i=e("dev_command.syncing_local_code_end");return n.succeed(i),i},fail:()=>n.stop()}},b=({revision:n})=>{let i=e("dev_command.revision_created",{revision:n,configFileName:w});return o.log(i),i},m=n=>{let i=C(n);o.logWithLoader(e("dev_command.failed_to_delete_types_dir",{cause:i})).fail(),u()},l=n=>{let i=o.logWithLoader({text:e("dev_command.syncing_types_to_revision_start",{revision:n})});return{success:()=>{i.succeed(e("dev_command.syncing_types_to_revision_end",{revision:n}))},fail:()=>{i.fail(e("dev_command.syncing_types_to_revision_fail_line1")),o.log(`  ${e("dev_command.syncing_types_to_revision_fail_line2")}`),u(),o.log(`  ${e("dev_command.syncing_types_to_revision_fail_line3")}`),u()}}},D=n=>{let i=o.logWithLoader({text:e("dev_command.syncing_pages_to_revision_start",{revision:n}),discardStdin:!1});return{success:()=>{i.succeed(e("dev_command.syncing_pages_to_revision_end",{revision:n}))},fail:()=>i.fail()}},u=()=>o.log(""),F=({dependencyName:n,dependencyVersion:i})=>o.log(t.green(e("dependencies.dependency_installed",{dependency:t.bold.green(`${n}${i?`@${i}`:""}`)}))),S=(n,i)=>{let r=o.logWithLoader({text:t.yellow(e("dependencies.installing_dependency",{dependency:t.bold.yellow(`${n}${i?`@${i}`:""}`)}))});return()=>{r.stop(),F({dependencyName:n,dependencyVersion:i})}},x=()=>o.log(t.green(e("dependencies.all_dependencies_installed"))),O=()=>{let n=o.logWithLoader({text:t.yellow(e("dependencies.installing_all_dependencies"))});return()=>{n.stop(),x()}},A=({dependencyName:n})=>o.log(t.green(e("dependencies.dependency_uninstalled",{dependency:t.bold.green(n)})));return{t:e,logAborting:p,logSyncingLocalCode:_,logRecoverableFailureToRemoveTypesDir:m,logUpdatedLocalCodeToRevision:b,logSyncingPagesToRevision:D,logSyncingTypesToRevision:l,logDependencyInstalling:S,logDependencyUninstalling:n=>{let i=o.logWithLoader({text:t.yellow(e("dependencies.uninstalling_dependency",{dependency:t.bold.yellow(n)}))});return()=>{i.stop(),A({dependencyName:n})}},logAllDependenciesInstalling:O,logOpeningBrowser:n=>{o.log(e("dev_command.opening_browser")),n&&o.log(e("dev_command.dev_server_url.approve_cert"))},logNoOpenedTab:n=>{let i=e("dev_command.no_open_editor",{key:t.bold.italic("e"),link:n});return o.log(i),i},logPublishRevision:({branchName:n,isLocalDeployment:i,currentRevision:r,latestRevision:g,preview:a})=>o.log(`
  ${a?`${e("publish_command.publish_details_preview")}
  ${t.underline(t.blue(a.deploymentShortUrl??a.deploymentUrl))}`:""}

  ${t.bold(e("publish_command.publish_details_about_to_publish"))}

    ${i?e("publish_command.prompt_what_to_publish_choice_local"):n?e("publish_command.prompt_what_to_publish_choice_remote",{branchName:n}):e("publish_command.prompt_what_to_publish_choice_remote_fallback")}
    ${e("publish_command.publish_details_ui_version",{revision:r})}
    ${g&&+g>+r?`
  ${t.red(`${t.bold(e("publish_command.publish_details_newer_editor_version_caution_title"))}: ${e("publish_command.publish_details_newer_editor_version_caution_details")} ${t.underline(t.blue($(e("publish_command.publish_details_newer_editor_version_link_text"),e("publish_command.publish_details_newer_editor_version_link_url"))))}`)}
`:""}
    ${i?t.red(`${t.bold(e("publish_command.publish_details_local_caution_title"))}: ${e("publish_command.publish_details_local_caution_details")}
`):""}`),logPublishing:()=>{let n=o.logWithLoader({text:e("publish_command.publishing"),discardStdin:!1});return{success:({siteUrl:i})=>{n.succeed(e("publish_command.published",{url:t.underline(t.blue(i))}))},fail:()=>n.stop()}},logPublishAborted:()=>o.log(`
${e("publish_command.publish_aborted")}`),logCreatingPreview:()=>o.log(`
${e("preview_command.creating_preview")}
`),logPreviewCreated:n=>o.log(e("preview_command.preview_created",{url:t.green(n)})),logPreviewUnsupported:()=>o.log(e("preview_command.preview_unsupported")),logNewLine:u,logFailedToGetLatestRevision:n=>{let i=n instanceof Error?n.stack:n;o.log(e("publish_command.failed_getting_latest_revision",{cause:i}))},logMigratingToAnyNpm:()=>{o.log(e("install_command.migrating_to_any_npm")+`
`),o.log(t.yellow(e("install_command.starting_migrating_to_any_npm")))},logMigrationToAnyNpmCompletedSuccessfully:()=>o.log(t.green(e("install_command.migration_to_any_npm_success"))),logMigrationToAnyNpmFailed:n=>{let i=C(n);o.log(t.red(e("install_command.migration_to_any_npm_failed",{cause:i})))},logDeploying:()=>{let n=o.logWithLoader({text:e("publish_command.deploying"),discardStdin:!1});return{success:()=>{n.succeed(`${e("publish_command.deploying")} ${t.green(e("publish_command.generic_task_done"))}`)},fail:()=>n.fail(`${e("publish_command.deploying")} ${t.red(e("publish_command.generic_task_failed"))}`)}},logForceDeployWarning:()=>o.log(t.red(`${t.bold(e("publish_command.publish_with_errors_caution_title"))}: ${e("publish_command.publish_with_errors_caution_details")}
`)),logPipelineErrorInformation:({pipelinesDescription:n})=>{let i=e("publish_command.publish_pipeline_error_badge"),r=t.green(e("publish_command.generic_task_done")),g=t.red(e("publish_command.generic_task_failed")),a="-".repeat(30),f="  ",N=c=>c.split(`
`).map((d,h)=>d.trim()&&h?`${f}${d}`:d).join(`
`),s="";s+=`
${t.red(i)} ${e("publish_command.publish_pipeline_error_title")}
`,s+=`
${a}
`,s+=`Status: ${g}`,n[0]?.tasksDescriptions?.forEach(c=>{if(s+=`

* ${c.taskName}... ${c.status==="ERROR"?`${g}:`:r}
`,c.description){let d=JSON.parse(c.description);for(let h in d)s+=`
${f}${i} ${h} | `,s+=N(d[h].toString())}}),s+=`
${a}`,o.log(s)},logPreviewing:()=>{let n=o.logWithLoader({text:e("publish_command.creating_preview"),discardStdin:!1});return{success:()=>n.succeed(e("publish_command.creating_preview_success")),fail:()=>n.fail(e("publish_command.creating_preview_failed")),stop:()=>n.stop()}},logWmlChangesRecieved:n=>o.log(t.green(`WML changes recieved for ${n.join(",")}`)),logWmlLocalFilesChangedForPage:n=>o.log(t.green(`Detected changes to local WML for ${n}, updating editor...`)),logWmlWriteResult:({skip:n,write:i})=>o.log(t.green(`Performed WML save to disk: wrote ${i.length} files. ${n.length>0?`Skipped ${n.length} files because there were no changes.`:""}`))}}function C(e){return e instanceof Error?e.message:JSON.stringify(e)}export{re as a,me as b};
//# sourceMappingURL=chunk-XBIKRRQN.js.map