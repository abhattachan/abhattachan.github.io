{"version":3,"sources":["../src/commands/render-command.tsx"],"sourcesContent":["import React from 'react';\nimport type { ReactElement } from 'react';\nimport { render } from '@wix/cli-ui-kit';\nimport { I18nProvider } from '@wix/cli-i18n';\nimport { ErrorReporterProvider } from '@wix/cli-error-reporting';\nimport { BiProvider } from '@wix/cli-telemetry-react';\nimport type { CommandServices } from '@wix/cli-command-contract';\nimport type { Command } from '@commander-js/extra-typings';\nimport { reportCommandStartEvent } from '../bi.js';\nimport messages from '../messages.json';\n\nexport async function renderCommand(\n  command: Command,\n  { biLogger, errorReporter }: CommandServices,\n  tree: ReactElement\n) {\n  await runCommand(command, { biLogger, errorReporter }, async () => {\n    await render(\n      <BiProvider value={biLogger}>\n        <ErrorReporterProvider value={errorReporter}>\n          <I18nProvider messages={messages}>{tree}</I18nProvider>\n        </ErrorReporterProvider>\n      </BiProvider>\n    );\n  });\n}\n\nexport async function runCommand(\n  command: Command,\n  services: CommandServices,\n  commandFn: () => Promise<void>\n) {\n  const commandStatus = reportCommandStartEvent(services.biLogger, command);\n\n  try {\n    await commandFn();\n    commandStatus.succeed();\n  } catch (e) {\n    commandStatus.failed(e);\n    throw e;\n  }\n}\n"],"mappings":";;2kBAAAA,IAAA,IAAAC,EAAkB,SAWlB,eAAsBC,EACpBC,EACA,CAAE,SAAAC,EAAU,cAAAC,CAAc,EAC1BC,EACA,CACA,MAAMC,EAAWJ,EAAS,CAAE,SAAAC,EAAU,cAAAC,CAAc,EAAG,SAAY,CACjE,MAAMG,EACJ,EAAAC,QAAA,cAACC,EAAA,CAAW,MAAON,GACjB,EAAAK,QAAA,cAACE,EAAA,CAAsB,MAAON,GAC5B,EAAAI,QAAA,cAACG,EAAA,CAAa,SAAUC,GAAWP,CAAK,CAC1C,CACF,CACF,CACF,CAAC,CACH,CAEA,eAAsBC,EACpBJ,EACAW,EACAC,EACA,CACA,IAAMC,EAAgBC,EAAwBH,EAAS,SAAUX,CAAO,EAExE,GAAI,CACF,MAAMY,EAAU,EAChBC,EAAc,QAAQ,CACxB,OAASE,EAAG,CACV,MAAAF,EAAc,OAAOE,CAAC,EAChBA,CACR,CACF","names":["init_esm_shims","import_react","renderCommand","command","biLogger","errorReporter","tree","runCommand","render","React","BiProvider","ErrorReporterProvider","I18nProvider","messages_default","services","commandFn","commandStatus","reportCommandStartEvent","e"]}